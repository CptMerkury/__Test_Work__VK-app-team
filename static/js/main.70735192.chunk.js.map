{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","id","fetchedUser","go","getSexText","sex","getAge","dateString","birth","Date","now","beforeBirth","setDate","getDate","setMonth","getMonth","getTime","getFullYear","title","before","photo_200","src","description","bdate","last_name","first_name","App","useState","activePanel","setActivePanel","setUser","size","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.70735192.chunk.js","sourcesContent":["import React from 'react';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport {Search} from \"@vkontakte/vkui\";\n\nconst Home = ({id, go, fetchedUser}) => {\n    const getSexText = () => {\n        switch (fetchedUser.sex) {\n            case 1:\n                return 'Female';\n            case 2:\n                return 'Male';\n            default:\n                return 'Undef';\n        }\n    }\n    const getAge = (dateString) => {\n        let birth = new Date(dateString);\n        let now = new Date();\n        let beforeBirth = ((() => {\n            birth.setDate(now.getDate());\n            birth.setMonth(now.getMonth());\n            return birth.getTime()\n        })() < birth.getTime()) ? 0 : 1;\n        return now.getFullYear() - birth.getFullYear() - beforeBirth;\n    }\n    return (\n        <Panel id={id}>\n            <PanelHeader>Searching</PanelHeader>\n            <Group>\n                <Search/>\n            </Group>\n            {fetchedUser &&\n            <Group title=\"User Data Fetched with VK Bridge\">\n                <Cell\n                    before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                    description={`${getSexText()} ${getAge(fetchedUser.bdate)}`}\n                >\n                    {`${fetchedUser.last_name} ${fetchedUser.first_name}`}\n                </Cell>\n                <Cell\n                    before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                    description={`${getSexText()} ${getAge(fetchedUser.bdate)}`}\n                >\n                    {`${fetchedUser.last_name} ${fetchedUser.first_name}`}\n                </Cell>\n                <Cell\n                    before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                    description={`${getSexText()} ${getAge(fetchedUser.bdate)}`}\n                >\n                    {`${fetchedUser.last_name} ${fetchedUser.first_name}`}\n                </Cell>\n                <Cell\n                    before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                    description={`${getSexText()} ${getAge(fetchedUser.bdate)}`}\n                >\n                    {`${fetchedUser.last_name} ${fetchedUser.first_name}`}\n                </Cell>\n                <Cell\n                    before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                    description={`${getSexText()} ${getAge(fetchedUser.bdate)}`}\n                >\n                    {`${fetchedUser.last_name} ${fetchedUser.first_name}`}\n                </Cell>\n                <Cell\n                    before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                    description={`${getSexText()} ${getAge(fetchedUser.bdate)}`}\n                >\n                    {`${fetchedUser.last_name} ${fetchedUser.first_name}`}\n                </Cell>\n                <Cell\n                    before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                    description={`${getSexText()} ${getAge(fetchedUser.bdate)}`}\n                >\n                    {`${fetchedUser.last_name} ${fetchedUser.first_name}`}\n                </Cell>\n                <Cell\n                    before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                    description={`${getSexText()} ${getAge(fetchedUser.bdate)}`}\n                >\n                    {`${fetchedUser.last_name} ${fetchedUser.first_name}`}\n                </Cell>\n                <Cell\n                    before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                    description={`${getSexText()} ${getAge(fetchedUser.bdate)}`}\n                >\n                    {`${fetchedUser.last_name} ${fetchedUser.first_name}`}\n                </Cell>\n            </Group>}\n        </Panel>\n    )\n};\n\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}